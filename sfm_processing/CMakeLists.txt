cmake_minimum_required(VERSION 2.6 FATAL_ERROR)
project(MY_GRAND_PROJECT)
find_package(PCL 1.5 REQUIRED)
find_package( OpenCV REQUIRED )
include_directories(${OPENCV_INCLUDE_DIRS})
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})
project(pc_vis_project)
#add_executable(pc_vis pc_vis.cpp)
#target_link_libraries(pc_vis ${PCL_IO_LIBRARIES})
#target_link_libraries(pc_vis ${PCL_VISUALIZATION_LIBRARIES})
#target_link_libraries(pc_vis ${PCL_COMMON_LIBRARIES})
#project(save_kinect)
#add_executable(save_kinect save_kinect.cc)
#target_link_libraries(save_kinect ${PCL_IO_LIBRARIES})
#target_link_libraries(save_kinect ${PCL_VISUALIZATION_LIBRARIES})
#target_link_libraries(save_kinect ${PCL_COMMON_LIBRARIES})
#target_link_libraries(save_kinect ${OpenCV_LIBS})
project(sfm_project)
add_executable(sfm_test sfm_test.cpp SFM.cpp PoseEstimation.cpp FeatureExtraction.cpp Tiling.cpp)
target_link_libraries(sfm_test ${PCL_LIBRARIES})
target_link_libraries(sfm_test ${OpenCV_LIBS})
project(calibration_project)
#add_executable(calibration DoKinectCalibration.cpp)
#target_link_libraries(sfm ${PCL_IO_LIBRARIES})
#target_link_libraries(sfm ${PCL_VISUALIZATION_LIBRARIES})
#target_link_libraries(sfm ${PCL_COMMON_LIBRARIES})
#target_link_libraries(calibration ${PCL_LIBRARIES})
#target_link_libraries(calibration ${OpenCV_LIBS})
#add_executable(imagelist_creator imagelist_creator.cpp)
#target_link_libraries(imagelist_creator ${OpenCV_LIBS})


