BIN_DIR=../bin
BUILD_DIR=../build
DEP_DIR=$(BUILD_DIR)/.deps

VWPREFIX = $(HOME)/projects/visionworkbench/build/
ASPPREFIX = $(HOME)/projects/StereoPipeline/build/
ISISSUPPORTDIR = ${ISISROOT}/../noinstall
LIBTOOL = libtool

CXX=g++
INCLUDES= -I$(VWPREFIX)/include -I$(ASPPREFIX)/include -I${ISISROOT}/../include
CXXFLAGS = -O0 -g -Wall -fopenmp -Wextra -Wno-unused-parameter -fopenmp $(INCLUDES)\
	   -DHAVE_CONFIG_H -DQT_SQL_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED -DDEBUG -fno-strict-aliasing

LD_FLAGS = -L$(VWPREFIX)/lib -L$(ASPPREFIX)/lib -L$(ISISROOT)/../lib/ \
-L$(ISISROOT)/3rdParty/lib -L$(ISISSUPPORTDIR)/lib -L$(ISISROOT)/lib 
QT_LIBS = ${ISISROOT}/3rdParty/lib/libQtCore.so.4 ${ISISROOT}/3rdParty/lib/libQtGui.so.4 ${ISISROOT}/3rdParty/lib/libQtNetwork.so.4 ${ISISROOT}/3rdParty/lib/libQtSql.so.4 ${ISISROOT}/3rdParty/lib/libQtSvg.so.4 ${ISISROOT}/3rdParty/lib/libQtXml.so.4 ${ISISROOT}/3rdParty/lib/libQtXmlPatterns.so.4 ${ISISROOT}/3rdParty/lib/libQtWebKit.so.4
#-lQtGui -lQtNetwork -lQtSql -lQtSvg -lQtXml -lQtXmlPatterns -lQtCore
LIBS = -lisis3 -lgsl -lqwt -lgeos_c -lgeos-3.3.2 -lcspice -lxerces-c -lkdu_a63R -L$(ISISROOT)/3rdParty/lib  $(QT_LIBS)\
-lvwCartography -lvwCamera -lvwStereo -lvwFileIO -lvwImage -lvwMath -laspIsisIO -lvwCore -lsuperlu \
-lpng -lboost_filesystem-mt-1_46_1 -lboost_system-mt-1_46_1 -lboost_thread-mt-1_46_1 -lboost_program_options-mt-1_46_1

# ASP dependencies
CXXFLAGS_ISIS = -I$(ISISROOT)/../noinstall/include -I$(ISISROOT)/../include -I$(ISISROOT)/../noinstall/include/QtCore -I$(ISISROOT)/3rdParty/include -I$(ISISROOT)/inc -I$(ISISROOT)/../include/boost-1_46_1/

CXXFLAGS_CAM2MAP = -I${ISISSUPPORTDIR}/include/naif  -I${ISISSUPPORTDIR}/include/QtCore -I${ISISSUPPORTDIR}/include/QtGui -I${ISISSUPPORTDIR}/include/QtNetwork -I${ISISSUPPORTDIR}/include/QtSql -I${ISISSUPPORTDIR}/include/QtSvg -I${ISISSUPPORTDIR}/include/QtXml -I${ISISSUPPORTDIR}/include/QtXmlPatterns -DQT_SHARED -I${ISISSUPPORTDIR}/include -I${ISISROOT}/inc

COMMON_SRCS=tracks.cc match.cc coregister.cc display.cc weights.cc featuresLOLA.cc util.cc

LIDAR2IMG_SRCS=$(COMMON_SRCS) lidar2img.cc
LIDAR_OBJS = $(LIDAR2IMG_SRCS:%.cc=$(BUILD_DIR)/%.o)

BRUTEFORCE_SRCS=$(COMMON_SRCS) brute_force_align.cc
BRUTE_OBJS = $(BRUTEFORCE_SRCS:%.cc=$(BUILD_DIR)/%.o)

# sort removes duplicates
SRCS = $(COMMON_SRCS) lidar2img.cc brute_force_align.cc

OUTPUTS=$(BIN_DIR)/lidar2img $(BIN_DIR)/bruteforcealign

all: $(OUTPUTS)

$(BIN_DIR)/lidar2img: $(LIDAR_OBJS)
	@echo "Linking $@..."
	@mkdir -p $(BIN_DIR)
	@$(CXX) $(LD_FLAGS) $^ -o $@ $(LIBS)

$(BIN_DIR)/bruteforcealign: $(BRUTE_OBJS)
	@echo "Linking $@..."
	@mkdir -p $(BIN_DIR)
	@$(CXX) $(LD_FLAGS) $^ -o $@ $(LIBS)

$(BUILD_DIR)/%.o: %.cc
	@echo "  CXX $<"
	@mkdir -p $(BUILD_DIR) $(DEP_DIR)
	@mkdir -p $(BUILD_DIR)/tests $(DEP_DIR)/tests
	@$(CXX) -c -MD $(CXXFLAGS) $(CXXFLAGS_ISIS) $(CXXFLAGS_CAM2MAP) $(INCPATH) $< -o $@
	@cp $(BUILD_DIR)/$*.d $(DEP_DIR)/$*.P; \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(BUILD_DIR)/$*.d >> $(DEP_DIR)/$*.P; \
	rm -f $(BUILD_DIR)/$*.d

tests = $(BIN_DIR)/Test_util $(BIN_DIR)/Test_tracks $(BIN_DIR)/Test_icp

test: $(tests)

UTIL_SRCS=$(COMMON_SRCS) tests/Test_util.cc
UTIL_OBJS =$(UTIL_SRCS:%.cc=$(BUILD_DIR)/%.o)
$(BIN_DIR)/Test_util: $(UTIL_OBJS)
	@$(CXX) $(LD_FLAGS) $^ -o $@ $(LIBS) -lgtest

TRACKS_SRCS=$(COMMON_SRCS) tests/Test_tracks.cc
TRACKS_OBJS =$(TRACKS_SRCS:%.cc=$(BUILD_DIR)/%.o)
$(BIN_DIR)/Test_tracks: $(TRACKS_OBJS)
	@$(CXX) $(LD_FLAGS) $^ -o $@ -lgtest $(LIBS)

ICP_SRCS=$(COMMON_SRCS) icp.cc tests/Test_icp.cc
ICP_OBJS =$(ICP_SRCS:%.cc=$(BUILD_DIR)/%.o)
$(BIN_DIR)/Test_icp: $(ICP_OBJS)
	@$(CXX) $(LD_FLAGS) $^ -o $@ -lgtest $(LIBS)
# the above generates dependencies automatically

# include the dependencies
-include $(SRCS:%.cc=$(DEP_DIR)/%.P)

clean:
	@rm -f $(LIDAR_OBJS)
	@rm -f $(OUTPUTS)

